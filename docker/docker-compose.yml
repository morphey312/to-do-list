version: "3"

networks:
  todolist:

services:
    nginx:
        image: nginx:1.21.0-alpine
        container_name: todolist-nginx
        environment:
            TZ: Europe/Kiev
        ports:
            - "85:80" #Если ругается что какой-то порт занят попробуйте сменить первую 80 на что-то другое, допустим на - "83:80"
            - "449:440" #Если ругается что какой-то порт занят попробуйте сменить первую 443 на что-то другое, допустим на - "444:443"
        volumes:
            - ..:/var/www/
            - ./nginx/logs:/var/log/nginx #логи будут "синхронизироватся" в эту папку (nginx/logs)
            - ./nginx/conf/default.conf:/etc/nginx/conf.d/default.conf #пробрасываем конфиг в нужную папку
        networks:
          - todolist


    php:
        build:
            context: php
            dockerfile: Dockerfile
        container_name: todolist-php
        environment:
            TZ: Europe/Kiev
        volumes:
            - ..:/var/www/
        networks:
          - todolist

    artisan:
        container_name: todolist-artisan
        build:
            context: artisan
            dockerfile: Dockerfile
        environment:
            TZ: Europe/Kiev
        volumes:
            - ..:/var/www/
        depends_on:
            - mysql
        working_dir: /var/www/
        entrypoint: [ "php", "/var/www/artisan" ]
        networks:
            - todolist

    mysql:
        image: mysql:8.0.29
        container_name: todolist-mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3309:3306" #Если ругается что какой-то порт занят попробуйте сменить первую 3309 на что-то другое, допустим на - "3308:3306"
        volumes:
            - mysql-data:/var/lib/mysql
            - ./mysql/configs/my.cnf:/etc/mysql/conf.d/my.cnf
#            - ./mysql/dumps/todolist.sql:/docker-entrypoint-initdb.d/todolist.sql
        environment:
            TZ: Europe/Kiev
            MYSQL_DATABASE: todolist
            MYSQL_USER: todolist
            MYSQL_PASSWORD: todolist
            MYSQL_ROOT_PASSWORD: todolist
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
          - todolist

    redis:
        image: redis:6.0.9-alpine
        container_name: todolist-redis
        restart: always
        ports:
            - "6385:6379"
        command: [ redis-server ]
        environment:
            TZ: Europe/Kiev
        networks:
          - todolist

#    npm:
#        image: node:16.16-buster-slim
#        container_name: todolist-npm
#        environment:
#            TZ: Europe/Kiev
#        volumes:
#            - ..:/var/www/
#        working_dir: /var/www/
#        entrypoint: [ "npm" ]

volumes:
    mysql-data:
        driver: local

